apiVersion: cloudresources.appvia.io/v2beta1
kind: CloudResourcePlan
metadata:
  name: appvia-aws-s3-bucket
spec:
  allocation:
    type: all
  cloud: aws
  description: Terraform module that creates an S3 bucket with an optional IAM user
    for external CI/CD systems
  enableTemplateAutoUpgrade: false
  enableWatch: false
  inputDefinitions:
  - default: null
    description: A list of lifecycle V2 rules
    name: lifecycle_configuration_rules
    type: |-
      list(object({
          enabled = bool
          id      = string

          abort_incomplete_multipart_upload_days = number

          # `filter_and` is the `and` configuration block inside the `filter` configuration.
          # This is the only place you should specify a prefix.
          filter_and = any
          expiration = any
          transition = list(any)

          noncurrent_version_expiration = any
          noncurrent_version_transition = list(any)
        }))
  - default: null
    description: Set to `false` to disable the ignoring of public access lists on
      the bucket
    name: ignore_public_acls
    type: bool
  - default: null
    description: |
      Additional key-value pairs to add to each map in `tags_as_list_of_maps`. Not added to `tags` or `id`.
      This is for some rare cases where resources want additional configuration of tags
      and therefore take a list of maps with tag key, value, and additional configuration.
    name: additional_tag_map
    type: map(string)
  - default: null
    description: Set to `false` to disable the blocking of new public access lists
      on the bucket
    name: block_public_acls
    type: bool
  - default: null
    description: Set this to true and specify `s3_replication_rules` to enable replication.
      `versioning_enabled` must also be `true`.
    name: s3_replication_enabled
    type: bool
  - default: null
    description: Specifies the static website hosting configuration object
    name: website_configuration
    type: |-
      list(object({
          index_document = string
          error_document = string
          routing_rules = list(object({
            condition = object({
              http_error_code_returned_equals = string
              key_prefix_equals               = string
            })
            redirect = object({
              host_name               = string
              http_redirect_code      = string
              protocol                = string
              replace_key_prefix_with = string
              replace_key_with        = string
            })
          }))
        }))
  - default: null
    description: |
      Single object for setting entire context at once.
      See description of individual variables for details.
      Leave string and numeric variables as `null` to use default value.
      Individual variable settings (non-null) override settings in context object,
      except for attributes, tags, and additional_tag_map, which are merged.
    name: context
    type: any
  - default: null
    description: |
      Delimiter to be used between ID elements.
      Defaults to `-` (hyphen). Set to `""` to use no delimiter at all.
    name: delimiter
    type: string
  - default: null
    description: |
      List of IAM policy documents that are merged together into the exported document.
      Statements defined in source_policy_documents or source_json must have unique SIDs.
      Statement having SIDs that match policy SIDs generated by this module will override them.
    name: source_policy_documents
    type: list(string)
  - default: null
    description: Bucket access logging configuration.
    name: logging
    type: |-
      object({
          bucket_name = string
          prefix      = string
        })
  - default: null
    description: Specifies the S3 object ownership control. Valid values are `ObjectWriter`,
      `BucketOwnerPreferred`, and 'BucketOwnerEnforced'.
    name: s3_object_ownership
    type: string
  - default: null
    description: Specifies the allowed headers, methods, origins and exposed headers
      when using CORS on this bucket
    name: cors_configuration
    type: |-
      list(object({
          allowed_headers = list(string)
          allowed_methods = list(string)
          allowed_origins = list(string)
          expose_headers  = list(string)
          max_age_seconds = number
        }))
  - default: null
    description: |
      Limit `id` to this many characters (minimum 6).
      Set to `0` for unlimited length.
      Set to `null` for keep the existing setting, which defaults to `0`.
      Does not affect `id_full`.
    name: id_length_limit
    type: number
  - default: null
    description: ID element. Usually used to indicate role, e.g. 'prod', 'staging',
      'source', 'build', 'test', 'deploy', 'release'
    name: stage
    type: string
  - default: null
    description: 'DEPRECATED (use `s3_replication_rules`): Specifies the replication
      rules for S3 bucket replication if enabled. You must also set s3_replication_enabled
      to true.'
    name: replication_rules
    type: list(any)
  - default: null
    description: The AWS KMS master key ARN used for the `SSE-KMS` encryption. This
      can only be used when you set the value of `sse_algorithm` as `aws:kms`. The
      default aws/s3 AWS KMS master key is used if this element is absent while the
      `sse_algorithm` is `aws:kms`
    name: kms_master_key_arn
    type: string
  - default: null
    description: The base path for SSM parameters where created IAM user's access
      key is stored
    name: ssm_base_path
    type: string
  - default: null
    description: |
      When `true`, permits a non-empty S3 bucket to be deleted by first deleting all objects in the bucket.
      THESE OBJECTS ARE NOT RECOVERABLE even if they were versioned and stored in Glacier.
    name: force_destroy
    type: bool
  - default: null
    description: |
      The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply.
      We recommend `private` to avoid exposing sensitive information. Conflicts with `grants`.
    name: acl
    type: string
  - default: null
    description: A state of versioning. Versioning is a means of keeping multiple
      variants of an object in the same bucket
    name: versioning_enabled
    type: bool
  - default: null
    description: List of actions the user is permitted to perform on the S3 bucket
    name: allowed_bucket_actions
    type: list(string)
  - default: null
    description: Set to `true` to require requests to use Secure Socket Layer (HTTPS/SSL).
      This will explicitly deny access to HTTP requests
    name: allow_ssl_requests_only
    type: bool
  - default: null
    description: Set to `false` to disable the blocking of new public policies on
      the bucket
    name: block_public_policy
    type: bool
  - default: null
    description: Set this to true to enable S3 Transfer Acceleration for the bucket.
    name: transfer_acceleration_enabled
    type: bool
  - default: null
    description: ID element. Usually an abbreviation of your organization name, e.g.
      'eg' or 'cp', to help ensure generated IDs are globally unique
    name: namespace
    type: string
  - default: null
    description: ID element _(Rarely used, not included by default)_. A customer identifier,
      indicating who this instance of a resource is for
    name: tenant
    type: string
  - default: null
    description: |
      Controls the letter case of ID elements (labels) as included in `id`,
      set as tag values, and output by this module individually.
      Does not affect values of tags passed in via the `tags` input.
      Possible values: `lower`, `title`, `upper` and `none` (no transformation).
      Set this to `title` and set `delimiter` to `""` to yield Pascal Case IDs.
      Default value: `lower`.
    name: label_value_case
    type: string
  - default: null
    description: Set to `true` to create an IAM user with permission to access the
      bucket
    name: user_enabled
    type: bool
  - default: null
    description: List of actions to permit `privileged_principal_arns` to perform
      on bucket and bucket prefixes (see `privileged_principal_arns`)
    name: privileged_principal_actions
    type: list(string)
  - default: null
    description: |
      A single S3 bucket ARN to use for all replication rules.
      Note: The destination bucket can be specified in the replication rule itself
      (which allows for multiple destinations), in which case it will take precedence over this variable.
    name: s3_replica_bucket_arn
    type: string
  - default: null
    description: A configuration for S3 object locking. With S3 Object Lock, you can
      store objects using a `write once, read many` (WORM) model. Object Lock can
      help prevent objects from being deleted or overwritten for a fixed amount of
      time or indefinitely.
    name: object_lock_configuration
    type: |-
      object({
          mode  = string # Valid values are GOVERNANCE and COMPLIANCE.
          days  = number
          years = number
        })
  - default: null
    description: |
      Terraform regular expression (regex) string.
      Characters matching the regex will be removed from the ID elements.
      If not set, `"/[^a-zA-Z0-9-]/"` is used to remove all characters other than hyphens, letters and digits.
    name: regex_replace_chars
    type: string
  - default: null
    description: Set to `true` to create an IAM Access Key for the created IAM user
    name: access_key_enabled
    type: bool
  - default: null
    description: |
      Set to `true` to store the created IAM user's access key in SSM Parameter Store,
      `false` to store them in Terraform state as outputs.
      Since Terraform state would contain the secrets in plaintext,
      use of SSM Parameter Store is recommended.
    name: store_access_key_in_ssm
    type: bool
  - default: null
    description: Cross-account IAM Role ARNs that will be allowed to perform S3 replication
      to this bucket (for replication within the same AWS account, it's not necessary
      to adjust the bucket policy).
    name: s3_replication_source_roles
    type: list(string)
  - default: null
    description: Set to false to prevent the module from creating any resources
    name: enabled
    type: bool
  - default: null
    description: |
      Describe additional descriptors to be output in the `descriptors` output map.
      Map of maps. Keys are names of descriptors. Values are maps of the form
      `{
         format = string
         labels = list(string)
      }`
      (Type is `any` so the map values can later be enhanced to provide additional options.)
      `format` is a Terraform format string to be passed to the `format()` function.
      `labels` is a list of labels, in order, to pass to `format()` function.
      Label values will be normalized before being passed to `format()` so they will be
      identical to how they appear in `id`.
      Default is `{}` (`descriptors` output will be empty).
    name: descriptor_formats
    type: any
  - default: null
    description: 'DEPRECATED (use `lifecycle_configuration_rules`): A list of IDs
      to assign to corresponding `lifecycle_rules`'
    name: lifecycle_rule_ids
    type: list(string)
  - default: null
    description: The server-side encryption algorithm to use. Valid values are `AES256`
      and `aws:kms`
    name: sse_algorithm
    type: string
  - default: null
    description: If provided, all website requests will be redirected to the specified
      host name and protocol
    name: website_redirect_all_requests_to
    type: |-
      list(object({
          host_name = string
          protocol  = string
        }))
  - default: null
    description: Set to `false` to disable the restricting of making the bucket public
    name: restrict_public_buckets
    type: bool
  - default: null
    description: Bucket name. If provided, the bucket will be created with this name
      instead of generating the name from the context
    name: bucket_name
    type: string
  - default: null
    description: |
      Set of labels (ID elements) to include as tags in the `tags` output.
      Default is to include all labels.
      Tags with empty values will not be included in the `tags` output.
      Set to `[]` to suppress all generated tags.
      **Notes:**
        The value of the `name` tag, if included, will be the `id`, not the `name`.
        Unlike other `null-label` inputs, the initial setting of `labels_as_tags` cannot be
        changed in later chained modules. Attempts to change it will be silently ignored.
    name: labels_as_tags
    type: set(string)
  - default: null
    description: |
      Additional tags (e.g. `{'BusinessUnit': 'XYZ'}`).
      Neither the tag keys nor the tag values will be modified by this module.
    name: tags
    type: map(string)
  - default: null
    description: 'DEPRECATED (`use lifecycle_configuration_rules`): A list of lifecycle
      rules'
    name: lifecycle_rules
    type: |-
      list(object({
          prefix  = string
          enabled = bool
          tags    = map(string)

          enable_glacier_transition            = bool
          enable_deeparchive_transition        = bool
          enable_standard_ia_transition        = bool
          enable_current_object_expiration     = bool
          enable_noncurrent_version_expiration = bool

          abort_incomplete_multipart_upload_days         = number
          noncurrent_version_glacier_transition_days     = number
          noncurrent_version_deeparchive_transition_days = number
          noncurrent_version_expiration_days             = number

          standard_transition_days    = number
          glacier_transition_days     = number
          deeparchive_transition_days = number
          expiration_days             = number
        }))
  - default: null
    description: 'DEPRECATED (use `source_policy_documents`): A valid bucket policy
      JSON document. Note that if the policy document is not specific enough (but
      still valid), Terraform may view the policy as constantly changing in a terraform
      plan. In this case, please make sure you use the verbose/specific version of
      the policy'
    name: policy
    type: string
  - default: null
    description: |
      ID element. Usually the component or solution name, e.g. 'app' or 'jenkins'.
      This is the only ID element not also included as a `tag`.
      The "name" tag is set to the full `id` string. There is no tag with the value of the `name` input.
    name: name
    type: string
  - default: null
    description: |
      Controls the letter case of the `tags` keys (label names) for tags generated by this module.
      Does not affect keys of tags passed in via the `tags` input.
      Possible values: `lower`, `title`, `upper`.
      Default value: `title`.
    name: label_key_case
    type: string
  - default: null
    description: Set to `true` to prevent uploads of unencrypted objects to S3 bucket
    name: allow_encrypted_uploads_only
    type: bool
  - default: null
    description: Specifies the replication rules for S3 bucket replication if enabled.
      You must also set s3_replication_enabled to true.
    name: s3_replication_rules
    type: list(any)
  - default: null
    description: ID element. Usually used for region e.g. 'uw2', 'us-west-2', OR role
      'prod', 'staging', 'dev', 'UAT'
    name: environment
    type: string
  - default: null
    description: |
      The order in which the labels (ID elements) appear in the `id`.
      Defaults to ["namespace", "environment", "stage", "name", "attributes"].
      You can omit any of the 6 labels ("tenant" is the 6th), but at least one must be present.
    name: label_order
    type: list(string)
  - default: null
    description: |
      A list of policy grants for the bucket, taking a list of permissions.
      Conflicts with `acl`. Set `acl` to `null` to use this.
    name: grants
    type: |-
      list(object({
          id          = string
          type        = string
          permissions = list(string)
          uri         = string
        }))
  - default: null
    description: |
      Set this to true to use Amazon S3 Bucket Keys for SSE-KMS, which reduce the cost of AWS KMS requests.

      For more information, see: https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-key.html
    name: bucket_key_enabled
    type: bool
  - default: null
    description: |
      ID element. Additional attributes (e.g. `workers` or `cluster`) to add to `id`,
      in the order they appear in the list. New attributes are appended to the
      end of the list. The elements of the list are joined by the `delimiter`
      and treated as a single ID element.
    name: attributes
    type: list(string)
  - default: null
    description: |
      List of maps. Each map has a key, an IAM Principal ARN, whose associated value is
      a list of S3 path prefixes to grant `privileged_principal_actions` permissions for that principal,
      in addition to the bucket itself, which is automatically included. Prefixes should not begin with '/'.
    name: privileged_principal_arns
    type: list(map(list(string)))
  outputs:
  - description: |
      The access key ID, if `var.user_enabled && var.access_key_enabled`.
      While sensitive, it does not need to be kept secret, so this is output regardless of `var.store_access_key_in_ssm`.
    name: access_key_id
    sensitive: true
    userFacing: true
  - description: FQDN of bucket
    name: bucket_domain_name
  - description: The bucket website domain, if website is enabled
    name: bucket_website_domain
  - description: Is module enabled
    name: enabled
  - description: The bucket region-specific domain name
    name: bucket_regional_domain_name
  - description: The bucket website endpoint, if website is enabled
    name: bucket_website_endpoint
  - description: Is user creation enabled
    name: user_enabled
  - description: The ARN of the replication IAM Role
    name: replication_role_arn
  - description: The SSM Path under which the S3 User's secret access key is stored
    name: secret_access_key_ssm_path
  - description: Bucket Name (aka ID)
    name: bucket_id
    userFacing: true
  - description: Bucket region
    name: bucket_region
    userFacing: true
  - description: Normalized IAM user name
    name: user_name
  - description: |
      The secret access key, if `var.user_enabled && var.access_key_enabled && !var.store_access_key_in_ssm`.
      This will be written to the state file unencrypted, so using `store_access_key_in_ssm` is recommended"
    name: secret_access_key
    sensitive: true
    userFacing: true
  - description: The SSM Path under which the S3 User's access key ID is stored
    name: access_key_id_ssm_path
  - description: Bucket ARN
    name: bucket_arn
  - description: The ARN assigned by AWS for the user
    name: user_arn
  - description: The user unique ID assigned by AWS
    name: user_unique_id
  policies:
  - editable: false
    path: lifecycle_configuration_rules
  - editable: false
    path: ignore_public_acls
  - editable: false
    path: additional_tag_map
  - editable: false
    path: block_public_acls
  - editable: false
    path: s3_replication_enabled
  - editable: false
    path: website_configuration
  - editable: false
    path: context
  - editable: false
    path: delimiter
  - editable: false
    path: source_policy_documents
  - editable: false
    path: logging
  - editable: false
    path: s3_object_ownership
  - editable: false
    path: cors_configuration
  - editable: false
    path: id_length_limit
  - editable: false
    path: stage
  - editable: false
    path: replication_rules
  - editable: false
    path: kms_master_key_arn
  - editable: false
    path: ssm_base_path
  - editable: false
    path: force_destroy
  - editable: false
    path: acl
  - editable: false
    path: versioning_enabled
  - editable: false
    path: allowed_bucket_actions
  - editable: false
    path: allow_ssl_requests_only
  - editable: false
    path: block_public_policy
  - editable: false
    path: transfer_acceleration_enabled
  - editable: false
    path: namespace
  - editable: false
    path: tenant
  - editable: false
    path: label_value_case
  - editable: false
    path: user_enabled
  - editable: false
    path: privileged_principal_actions
  - editable: false
    path: s3_replica_bucket_arn
  - editable: false
    path: object_lock_configuration
  - editable: false
    path: regex_replace_chars
  - editable: false
    path: access_key_enabled
  - editable: false
    path: store_access_key_in_ssm
  - editable: false
    path: s3_replication_source_roles
  - editable: false
    path: enabled
  - editable: false
    path: descriptor_formats
  - editable: false
    path: lifecycle_rule_ids
  - editable: false
    path: sse_algorithm
  - editable: false
    path: website_redirect_all_requests_to
  - editable: false
    path: restrict_public_buckets
  - editable: true
    path: bucket_name
  - editable: false
    path: labels_as_tags
  - editable: false
    path: tags
  - editable: false
    path: lifecycle_rules
  - editable: false
    path: policy
  - editable: true
    path: name
  - editable: false
    path: label_key_case
  - editable: false
    path: allow_encrypted_uploads_only
  - editable: false
    path: s3_replication_rules
  - editable: false
    path: environment
  - editable: false
    path: label_order
  - editable: false
    path: grants
  - editable: false
    path: bucket_key_enabled
  - editable: false
    path: attributes
  - editable: false
    path: privileged_principal_arns
  template:
    revision: 3.0.1
    source: https://github.com/appvia/terraform-aws-s3-bucket
    variables:
      access_key_enabled: true
      force_destroy: true
      user_enabled: true
